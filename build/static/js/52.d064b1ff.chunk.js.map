{"version":3,"sources":["../static/js/52.d064b1ff.chunk.js","pages/Charts/ChartPage/index.js","../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","pages/Charts/ChartPage/Chart/index.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/src/chart.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/chartjs-color/node_modules/color-convert/index.js","../node_modules/chartjs-color/node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_createBaseEach.js"],"names":["webpackJsonp","1268","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_class","_temp","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_components_LayoutComponents_Page__","__WEBPACK_IMPORTED_MODULE_2_react_helmet__","__WEBPACK_IMPORTED_MODULE_2_react_helmet___default","__WEBPACK_IMPORTED_MODULE_3__Chart__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","ChartistPage","_React$Component","this","getPrototypeOf","apply","arguments","a","createElement","title","React","Component","defaultProps","pathName","roles","1543","exports","easing","canvas","options","1547","helpers","_set","scope","values","merge","1572","interpolate","start","view","model","ease","ilen","actual","origin","type","c0","c1","keys","hasOwnProperty","color","valid","mix","rgbString","isFinite","Element","configuration","extend","initialize","hidden","pivot","me","_view","clone","_model","_start","transition","tooltipPosition","x","y","hasValue","isNumber","inherits","1584","defaults","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","undefined","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","position","weight","addBox","1585","Arc","Line","Point","Rectangle","1660","filterByPosition","array","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","b","v0","v1","item","boxes","push","removeBox","layoutItem","index","indexOf","splice","configure","prop","update","width","height","getMinimumBoxSize","box","minSize","isHorizontal","chartWidth","maxChartAreaWidth","horizontalBoxHeight","maxChartAreaHeight","verticalBoxWidth","minBoxSizes","horizontal","fitBox","minBoxSize","findNextWhere","minBox","scaleMargin","left","Math","max","totalLeftBoxesWidth","maxHorizontalLeftPadding","right","totalRightBoxesWidth","maxHorizontalRightPadding","top","bottom","chartHeight","finalFitVerticalBox","totalTopBoxesHeight","totalBottomBoxesHeight","placeBox","leftPadding","rightPadding","layoutOptions","layout","padding","toPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartAreaWidth","chartAreaHeight","concat","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","chartArea","1661","labelsFromTicks","ticks","labels","label","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","size","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","Ticks","display","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","map","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","sinRotation","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","innerWidth","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","shouldSkip","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","zeroLineIndex","valueAtIndexOrDefault","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","1662","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","1668","uid","id","Array","toString","isObject","defaultValue","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","1831","convert","string","Color","obj","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","color1","p","w1","w2","toJSON","slice","console","error","spaces","maxes","getValues","space","charAt","chans","capped","sname","svalues","window","1832","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","get","set","1833","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","1834","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","datasets","data","isDatasetVisible","getDatasetMeta","element","skip","getIntersectItems","elements","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","_datasetIndex","x-axis","point","nearest","sizeA","getArea","sizeB","ret","intersectsItem","inXRange","inYRange","1835","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","1836","plugins","_plugins","_cacheId","register","plugin","unregister","idx","clear","getAll","notify","hook","params","method","descriptors","cache","$plugins","config","_invalidate","1837","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","xLabel","yLabel","getBaseModel","tooltipOpts","xPadding","yPadding","xAlign","yAlign","bodyFontColor","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyAlign","bodyFontSize","bodySpacing","titleFontColor","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontStyle","titleFontSize","_titleAlign","titleAlign","titleSpacing","titleMarginBottom","footerFontColor","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontStyle","footerFontSize","_footerAlign","footerAlign","footerSpacing","footerMarginTop","caretSize","cornerRadius","backgroundColor","legendColorBackground","multiKeyBackground","displayColors","borderColor","borderWidth","getTooltipSize","tooltip","_chart","body","combinedBodyLength","reduce","bodyItem","before","lines","after","beforeBody","afterBody","titleLineCount","footerLineCount","footer","widthPadding","maxLineWidth","line","determineAlignment","lf","rf","olf","orf","yf","midX","midY","caretPadding","_options","getBackgroundPoint","vm","alignment","paddingAndSize","radiusAndPadding","getBeforeAfterBodyLines","tooltips","enabled","custom","mode","callbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","activeElement","labelTextColor","afterLabel","beforeFooter","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","d","distanceBetweenPoints","tp","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","changed","existingModel","active","_active","_data","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","2163","__WEBPACK_IMPORTED_MODULE_1_react_chartjs_2__","lineData","lineTension","borderCapStyle","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","lineOptions","xAxes","barData","barOptions","stacked","yAxes","radarData","radarOptions","polarData","polarOptions","arc","pieData","hoverBackgroundColor","pieOptions","doughnutData","doughnutOptions","ChartItems","className","href","rel","2164","process","_objectWithoutProperties","Doughnut","Pie","Bar","Radar","Polar","__WEBPACK_IMPORTED_MODULE_1_prop_types__","__WEBPACK_IMPORTED_MODULE_1_prop_types___default","__WEBPACK_IMPORTED_MODULE_2_chart_js__","__WEBPACK_IMPORTED_MODULE_2_chart_js___default","__WEBPACK_IMPORTED_MODULE_3_lodash_isEqual__","__WEBPACK_IMPORTED_MODULE_3_lodash_isEqual___default","__WEBPACK_IMPORTED_MODULE_4_lodash_find__","__WEBPACK_IMPORTED_MODULE_5_lodash_keyBy__","__WEBPACK_IMPORTED_MODULE_5_lodash_keyBy___default","_extends","assign","NODE_ENV","PUBLIC_URL","ChartComponent","_this","_ret","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","legend","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","_this2","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","pid","otherProps","rest","_props2","node","_props3","onClick","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","2165","Chart","Animation","animationService","Interaction","platform","Scale","scaleService","Tooltip","Legend","_element","Title","pluginService","PluginBase","canvasHelpers","layoutService","2166","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","2167","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","2168","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","drawImage","isNaN","SQRT2","leftX","topY","sideSize","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","2169","matches","match","resolve","inputs","2170","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","2171","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","2172","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","m","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hi","f","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","hr","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","2173","abbr","hex","rgba","per","colorNames","getRgb","getHsl","hsla","getAlpha","hexDouble","percentaString","reverseNames","num","toUpperCase","name","2174","2175","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","2176","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","2177","xRange","hitRadius","yRange","pointStyle","hoverBorderWidth","2178","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","cornerAt","corners","startCorner","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","borders","corner","bounds","2179","getContext","2180","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","EXPANDO_KEY","initial","displayWidth","aspectRatio","displayHeight","listener","eventListenerOptions","createEvent","nativeEvent","fromNativeEvent","EVENT_TYPES","throttled","ticking","createResizer","resizer","cls","CSS_PREFIX","cssText","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","reflow","offsetParent","classList","add","CSS_RENDER_MONITOR","unwatchForRender","remove","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","supportsEventListenerOptions","supports","passive","keyframes","getElementById","removeAttribute","proxies","addEvent","removeEvent","2181","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","types","instances","_bufferedRender","controller","bindEvents","resize","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","2182","listenArrayEvents","_chartjs","arrayEvents","res","unlistenArrayEvents","stub","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","2183","generateTicks","generationOptions","dataRange","factor","precision","spacing","stepSize","niceRange","ceil","niceMin","niceMax","numSpaces","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","fixedStepSize","end","ticksAsNumbers","2184","defaultConfig","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","2185","LinearScale","IDMatches","hasStacks","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","2186","exp","significand","tickVal","endExp","endSignificand","minNotZero","lastTick","LogarithmicScale","tickValues","_getFirstTickValue","firstTickValue","2187","getValueCount","angleLines","pointLabels","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","textSize","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","getDistanceFromCenterForValue","outerPosition","xCenter","yCenter","pointLabelPosition","pointLabelFontColor","drawRadiusLine","circular","numberOrZero","param","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","2188","sorter","arrayUnique","hash","out","buildLookupTable","timestamps","distribution","time","prev","curr","table","lookup","mid","i0","i1","lo","skey","tkey","span","momentify","parser","format","moment","parse","input","startOf","valueOf","determineStepSize","unit","capacity","interval","INTERVALS","milliseconds","steps","determineUnitForAutoTicks","minUnit","UNITS","MAX_INTEGER","common","determineUnitForFormatting","diff","as","determineMajorUnit","generate","timeOpts","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","millisecond","second","minute","hour","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","day","week","month","quarter","year","displayFormat","displayFormats","TimeScale","warn","timestamp","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","tooltipFormat","tickFormatFunction","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","exampleTime","exampleLabel","2189","computeMinSampleSize","pixels","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","percent","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","imeta","ivalue","stackIndex","maxBarThickness","Infinity","horizontalBar","2190","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","2191","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","2192","lineEnabled","showLine","lineElementOptions","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","getPointBorderColor","getPointBorderWidth","getPointRotation","pointRotation","pointOptions","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","capControlPoint","controlPoints","halfBorderWidth","2193","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","2194","radar","pointElementOptions","2195","scatter","2196","2197","2198","2199","2200","PolarArea","2201","2202","2203","filler","2204","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","propagate","visited","visible","createMapper","mappers","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","boundary","afterDatasetsUpdate","$filler","beforeDatasetDraw","2205","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","isLineWidthZero","offSet","halfFontSize","xLeft","yMiddle","lh","hitBox","beforeInit","afterEvent","2206","createNewTitleBlockAndAttach","titleOpts","titleBlock","titleX","titleY","titleFont","2207","isEqual","other","baseIsEqual","2208","createFind","find","2209","findIndexFunc","predicate","iterable","isArrayLike","iteratee","baseIteratee","2210","toInteger","nativeMax","baseFindIndex","2211","toFinite","remainder","2212","toNumber","INFINITY","2213","baseAssignValue","createAggregator","keyBy","2214","setter","initializer","arrayAggregator","baseAggregator","accumulator","2215","2216","baseEach","2217","baseForOwn","createBaseEach","2218","baseFor","2219","eachFunc","fromRight"],"mappings":"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","file":"static/js/52.d064b1ff.chunk.js","sourcesContent":["webpackJsonp([52],{\n\n/***/ 1268:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_components_LayoutComponents_Page__ = __webpack_require__(225);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_helmet__ = __webpack_require__(444);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_helmet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_helmet__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Chart__ = __webpack_require__(2163);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _class,_temp;function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ChartistPage=(_temp=_class=function(_React$Component){_inherits(ChartistPage,_React$Component);function ChartistPage(){_classCallCheck(this,ChartistPage);return _possibleConstructorReturn(this,(ChartistPage.__proto__||Object.getPrototypeOf(ChartistPage)).apply(this,arguments));}_createClass(ChartistPage,[{key:'render',value:function render(){var props=this.props;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_components_LayoutComponents_Page__[\"a\" /* default */],props,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_helmet___default.a,{title:'Chart.js'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__Chart__[\"a\" /* default */],null));}}]);return ChartistPage;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component),_class.defaultProps={pathName:'Chart.js',roles:['agent','administrator']},_temp);/* harmony default export */ __webpack_exports__[\"default\"] = (ChartistPage);\n\n/***/ }),\n\n/***/ 1543:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(1668);\nmodule.exports.easing = __webpack_require__(2167);\nmodule.exports.canvas = __webpack_require__(2168);\nmodule.exports.options = __webpack_require__(2169);\n\n\n/***/ }),\n\n/***/ 1547:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1543);\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n\n/***/ }),\n\n/***/ 1572:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar color = __webpack_require__(1831);\nvar helpers = __webpack_require__(1543);\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n\n/***/ }),\n\n/***/ 1584:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar helpers = __webpack_require__(1543);\nvar layouts = __webpack_require__(1660);\n\nmodule.exports = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tlayouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\n\n/***/ }),\n\n/***/ 1585:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\nmodule.exports.Arc = __webpack_require__(2175);\nmodule.exports.Line = __webpack_require__(2176);\nmodule.exports.Point = __webpack_require__(2177);\nmodule.exports.Rectangle = __webpack_require__(2178);\n\n\n/***/ }),\n\n/***/ 1660:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1543);\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n\n/***/ }),\n\n/***/ 1661:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar Element = __webpack_require__(1572);\nvar helpers = __webpack_require__(1543);\nvar Ticks = __webpack_require__(1662);\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers.isArray(tick) ?\n\t\thelpers.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n\tvar valueOrDefault = helpers.valueOrDefault;\n\tvar globalDefaults = defaults.global;\n\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\treturn {\n\t\tsize: size,\n\t\tstyle: style,\n\t\tfamily: family,\n\t\tfont: helpers.fontString(size, style, family)\n\t};\n}\n\nfunction parseLineHeight(options) {\n\treturn helpers.options.toLineHeight(\n\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\tme.afterBuildTicks();\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers.noop,\n\tafterDataLimits: function() {\n\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers.noop,\n\tafterBuildTicks: function() {\n\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tcontext.font = tickFont.font;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = opts.display;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing them\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t} else {\n\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar skipRatio;\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\tvar result = [];\n\t\tvar i, tick, shouldSkip;\n\n\t\t// figure out the maximum number of gridlines to show\n\t\tvar maxTicks;\n\t\tif (optionTicks.maxTicksLimit) {\n\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t}\n\n\t\tif (isHorizontal) {\n\t\t\tskipRatio = false;\n\n\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t}\n\n\t\t\t// if they defined a max number of optionTicks,\n\t\t\t// increase skipRatio until that number is met\n\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t// Actually draw the scale on the canvas\n\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tif (!options.display) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t} else {\n\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\tvar textAlign = 'middle';\n\t\t\tvar textBaseline = 'middle';\n\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t// bottom\n\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\t// top\n\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t}\n\n\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\tty1 = yTickStart;\n\t\t\t\tty2 = yTickEnd;\n\t\t\t\ty1 = chartArea.top;\n\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tvar labelXOffset;\n\n\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t} else {\n\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t}\n\n\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\ttx1 = xTickStart;\n\t\t\t\ttx2 = xTickEnd;\n\t\t\t\tx1 = chartArea.left;\n\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\tif (gridLines.display) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (gridLines.drawBorder) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tvar x1 = me.left;\n\t\t\tvar x2 = me.right + axisWidth;\n\t\t\tvar y1 = me.top;\n\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\tif (isHorizontal) {\n\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\ty1 += aliasPixel;\n\t\t\t\ty2 += aliasPixel;\n\t\t\t} else {\n\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\tx1 += aliasPixel;\n\t\t\t\tx2 += aliasPixel;\n\t\t\t}\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\n\n/***/ }),\n\n/***/ 1662:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1543);\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 1668:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\n/***/ }),\n\n/***/ 1831:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar convert = __webpack_require__(2171);\nvar string = __webpack_require__(2173);\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n/***/ }),\n\n/***/ 1832:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Element = __webpack_require__(1572);\n\nvar exports = module.exports = Element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\n\n/***/ }),\n\n/***/ 1833:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n\n\nvar defaults = __webpack_require__(1547);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = {\n\tframeDuration: 17,\n\tanimations: [],\n\tdropFrames: 0,\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {Number} duration - The animation duration in ms.\n\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\t\tvar startTime = Date.now();\n\t\tvar framesToDrop = 0;\n\n\t\tif (me.dropFrames > 1) {\n\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t}\n\n\t\tme.advance(1 + framesToDrop);\n\n\t\tvar endTime = Date.now();\n\n\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function(count) {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart;\n\t\tvar i = 0;\n\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\n\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 1834:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1543);\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 1835:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1543);\nvar basic = __webpack_require__(2179);\nvar dom = __webpack_require__(2180);\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n\n/***/ }),\n\n/***/ 1836:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n\n/***/ }),\n\n/***/ 1837:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar Element = __webpack_require__(1572);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {Point} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: Math.round(x / count),\n\t\t\ty: Math.round(y / count)\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t * @returns {Point} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n/**\n * Helper method to merge the opacity into a color\n */\nfunction mergeOpacity(colorString, opacity) {\n\tvar color = helpers.color(colorString);\n\treturn color.alpha(opacity * color.alpha()).rgbaString();\n}\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n// Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = defaults.global;\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers.each(body, function(bodyItem) {\n\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar body = vm.body;\n\n\t\tctx.textAlign = vm._bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t// Before Body\n\t\tvar xLinePadding = 0;\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t// Draw body lines now\n\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.x += vm.xPadding;\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {Boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nexports.positioners = positioners;\n\n\n\n/***/ }),\n\n/***/ 2163:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_chartjs_2__ = __webpack_require__(2164);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var lineData={labels:['January','February','March','April','May','June','July'],datasets:[{label:'My First dataset',fill:false,lineTension:0.1,backgroundColor:'rgba(75,192,192,0.4)',borderColor:'rgba(75,192,192,1)',borderCapStyle:'butt',borderDash:[],borderDashOffset:0.0,borderJoinStyle:'miter',pointBorderColor:'rgba(75,192,192,1)',pointBackgroundColor:'#fff',pointBorderWidth:1,pointHoverRadius:5,pointHoverBackgroundColor:'rgba(75,192,192,1)',pointHoverBorderColor:'rgba(220,220,220,1)',pointHoverBorderWidth:2,pointRadius:1,pointHitRadius:10,data:[65,59,80,81,56,55,40]}]};var lineOptions={scales:{xAxes:[{display:false}]}};var barData={labels:['January','February','March','April','May','June','July'],datasets:[{label:'My First dataset',backgroundColor:['rgba(255, 99, 132, 0.2)','rgba(54, 162, 235, 0.2)','rgba(255, 206, 86, 0.2)','rgba(75, 192, 192, 0.2)','rgba(153, 102, 255, 0.2)','rgba(255, 159, 64, 0.2)'],borderColor:['rgba(255,99,132,1)','rgba(54, 162, 235, 1)','rgba(255, 206, 86, 1)','rgba(75, 192, 192, 1)','rgba(153, 102, 255, 1)','rgba(255, 159, 64, 1)'],borderWidth:1,data:[65,59,80,81,56,55,40]}]};var barOptions={scales:{xAxes:[{stacked:true}],yAxes:[{stacked:true}]}};var radarData={labels:['Eating','Drinking','Sleeping','Designing','Coding','Cycling','Running'],datasets:[{label:'My First dataset',backgroundColor:'rgba(179,181,198,0.2)',borderColor:'rgba(179,181,198,1)',pointBackgroundColor:'rgba(179,181,198,1)',pointBorderColor:'#fff',pointHoverBackgroundColor:'#fff',pointHoverBorderColor:'rgba(179,181,198,1)',data:[65,59,90,81,56,55,40]},{label:'My Second dataset',backgroundColor:'rgba(255,99,132,0.2)',borderColor:'rgba(255,99,132,1)',pointBackgroundColor:'rgba(255,99,132,1)',pointBorderColor:'#fff',pointHoverBackgroundColor:'#fff',pointHoverBorderColor:'rgba(255,99,132,1)',data:[28,48,40,19,96,27,100]}]};var radarOptions={scale:{reverse:true,ticks:{beginAtZero:true}}};var polarData={datasets:[{data:[11,16,7,3,14],backgroundColor:['#FF6384','#4BC0C0','#FFCE56','#E7E9ED','#36A2EB'],label:'My dataset'// for legend\n}],labels:['Red','Green','Yellow','Grey','Blue']};var polarOptions={elements:{arc:{borderColor:'#4BC0C0'}}};var pieData={labels:['Red','Blue','Yellow'],datasets:[{data:[300,50,100],backgroundColor:['#FF6384','#36A2EB','#FFCE56'],hoverBackgroundColor:['#FF6384','#36A2EB','#FFCE56']}]};var pieOptions={};var doughnutData={labels:['Red','Blue','Yellow'],datasets:[{data:[300,50,100],backgroundColor:['#FF6384','#36A2EB','#FFCE56'],hoverBackgroundColor:['#FF6384','#36A2EB','#FFCE56']}]};var doughnutOptions={};var ChartItems=function(_React$Component){_inherits(ChartItems,_React$Component);function ChartItems(){_classCallCheck(this,ChartItems);return _possibleConstructorReturn(this,(ChartItems.__proto__||Object.getPrototypeOf(ChartItems)).apply(this,arguments));}_createClass(ChartItems,[{key:'render',value:function render(){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('section',{className:'card'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'card-header'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'utils__title'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Chart.js'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://www.chartjs.org/',target:'_blank',rel:'noopener noreferrer',className:'btn btn-sm btn-primary ml-4'},'Official Documentation ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'card-body'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'row'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Line Chart')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://www.chartjs.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_chartjs_2__[\"c\" /* Line */],{data:lineData,options:lineOptions,width:400,height:200}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Bar Chart')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://www.chartjs.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_chartjs_2__[\"a\" /* Bar */],{data:barData,options:barOptions,width:400,height:200})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'row'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Radar Chart')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://www.chartjs.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_chartjs_2__[\"f\" /* Radar */],{data:radarData,options:radarOptions,width:400,height:200}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Polar Chart')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://www.chartjs.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_chartjs_2__[\"e\" /* Polar */],{data:polarData,options:polarOptions,width:400,height:200})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'row'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Pie Chart')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://www.chartjs.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_chartjs_2__[\"d\" /* Pie */],{data:pieData,options:pieOptions,width:400,height:200}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-lg-6'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h5',{className:'text-black'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('strong',null,'Doughnut Chart')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',{className:'text-muted'},'Element: read',' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{href:'http://www.chartjs.org/',target:'_blank',rel:'noopener noreferrer'},'official documentation',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('small',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'icmn-link ml-1'})))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mb-5'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_react_chartjs_2__[\"b\" /* Doughnut */],{data:doughnutData,options:doughnutOptions,width:400,height:200}))))));}}]);return ChartItems;}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);/* harmony default export */ __webpack_exports__[\"a\"] = (ChartItems);\n\n/***/ }),\n\n/***/ 2164:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Doughnut; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return Pie; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return Line; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Bar; });\n/* unused harmony export HorizontalBar */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return Radar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return Polar; });\n/* unused harmony export Bubble */\n/* unused harmony export Scatter */\n/* unused harmony export defaults */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_chart_js__ = __webpack_require__(2165);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_chart_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_chart_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_isEqual__ = __webpack_require__(2207);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_isEqual___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_lodash_isEqual__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_lodash_find__ = __webpack_require__(2208);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_lodash_find___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_lodash_find__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_lodash_keyBy__ = __webpack_require__(2213);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_lodash_keyBy___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_lodash_keyBy__);\n/* unused harmony reexport Chart */\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\nvar NODE_ENV = typeof process !== 'undefined' && Object({\"NODE_ENV\":\"production\",\"PUBLIC_URL\":\".\"}) && \"production\";\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n\n\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!__WEBPACK_IMPORTED_MODULE_3_lodash_isEqual___default()(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!__WEBPACK_IMPORTED_MODULE_3_lodash_isEqual___default()(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!__WEBPACK_IMPORTED_MODULE_3_lodash_isEqual___default()(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !__WEBPACK_IMPORTED_MODULE_3_lodash_isEqual___default()(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  };\n\n  // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n\n\n    var data = this.memoizeDataProps(this.props);\n\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = __WEBPACK_IMPORTED_MODULE_2_chart_js___default.a.helpers.configMerge(this.chartInstance.options, options);\n    }\n\n    // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n\n    var currentDatasetsIndexed = __WEBPACK_IMPORTED_MODULE_5_lodash_keyBy___default()(currentDatasets, this.props.datasetKeyProvider);\n\n    // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']);\n        // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !__WEBPACK_IMPORTED_MODULE_3_lodash_isEqual___default()(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new __WEBPACK_IMPORTED_MODULE_2_chart_js___default.a(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func]).isRequired,\n  getDatasetAtEvent: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,\n  getElementAtEvent: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,\n  getElementsAtEvent: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,\n  height: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.number,\n  legend: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,\n  onElementsClick: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,\n  options: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,\n  plugins: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object),\n  redraw: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,\n  type: function type(props, propName, componentName) {\n    if (!__WEBPACK_IMPORTED_MODULE_2_chart_js___default.a.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.number,\n  datasetKeyProvider: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\n\n\n/* unused harmony default export */ var _unused_webpack_default_export = (ChartComponent);\n\nvar Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nvar Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nvar Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nvar Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nvar HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nvar Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nvar Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nvar Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nvar Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\nvar defaults = __WEBPACK_IMPORTED_MODULE_2_chart_js___default.a.defaults;\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(91)))\n\n/***/ }),\n\n/***/ 2165:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @namespace Chart\n */\nvar Chart = __webpack_require__(2166)();\n\nChart.helpers = __webpack_require__(1543);\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n__webpack_require__(2170)(Chart);\n\nChart.Animation = __webpack_require__(1832);\nChart.animationService = __webpack_require__(1833);\nChart.defaults = __webpack_require__(1547);\nChart.Element = __webpack_require__(1572);\nChart.elements = __webpack_require__(1585);\nChart.Interaction = __webpack_require__(1834);\nChart.layouts = __webpack_require__(1660);\nChart.platform = __webpack_require__(1835);\nChart.plugins = __webpack_require__(1836);\nChart.Scale = __webpack_require__(1661);\nChart.scaleService = __webpack_require__(1584);\nChart.Ticks = __webpack_require__(1662);\nChart.Tooltip = __webpack_require__(1837);\n\n__webpack_require__(2181)(Chart);\n__webpack_require__(2182)(Chart);\n\n__webpack_require__(2183)(Chart);\n__webpack_require__(2184)(Chart);\n__webpack_require__(2185)(Chart);\n__webpack_require__(2186)(Chart);\n__webpack_require__(2187)(Chart);\n__webpack_require__(2188)(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n__webpack_require__(2189)(Chart);\n__webpack_require__(2190)(Chart);\n__webpack_require__(2191)(Chart);\n__webpack_require__(2192)(Chart);\n__webpack_require__(2193)(Chart);\n__webpack_require__(2194)(Chart);\n__webpack_require__(2195)(Chart);\n\n__webpack_require__(2196)(Chart);\n__webpack_require__(2197)(Chart);\n__webpack_require__(2198)(Chart);\n__webpack_require__(2199)(Chart);\n__webpack_require__(2200)(Chart);\n__webpack_require__(2201)(Chart);\n__webpack_require__(2202)(Chart);\n\n// Loading built-in plugins\nvar plugins = __webpack_require__(2203);\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n\n/***/ }),\n\n/***/ 2166:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n/***/ }),\n\n/***/ 2167:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1668);\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n\n/***/ }),\n\n/***/ 2168:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1668);\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\t// NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n\t\t\t// on Chrome when `r` is exactly half the height or the width.\n\t\t\tvar epsilon = 0.0000001;\n\t\t\tvar r = Math.min(radius, (height / 2) - epsilon, (width / 2) - epsilon);\n\n\t\t\tctx.moveTo(x + r, y);\n\t\t\tctx.lineTo(x + width - r, y);\n\t\t\tctx.arcTo(x + width, y, x + width, y + r, r);\n\t\t\tctx.lineTo(x + width, y + height - r);\n\t\t\tctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n\t\t\tctx.lineTo(x + r, y + height);\n\t\t\tctx.arcTo(x, y + height, x, y + height - r, r);\n\t\t\tctx.lineTo(x, y + r);\n\t\t\tctx.arcTo(x, y, x + r, y, r);\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\t\trotation = rotation || 0;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.translate(x, y);\n\t\tctx.rotate(rotation * Math.PI / 180);\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(-edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(0, -2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.rect(-size, -size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = -offset;\n\t\t\tvar topY = -offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\n\t\t\t// NOTE(SB) the rounded rect implementation changed to use `arcTo`\n\t\t\t// instead of `quadraticCurveTo` since it generates better results\n\t\t\t// when rect is almost a circle. 0.425 (instead of 0.5) produces\n\t\t\t// results visually closer to the previous impl.\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.moveTo(-size, 0);\n\t\t\tctx.lineTo(0, size);\n\t\t\tctx.lineTo(size, 0);\n\t\t\tctx.lineTo(0, -size);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.restore();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n};\n\n\n/***/ }),\n\n/***/ 2169:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1668);\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 2170:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n/* global document: false */\n\n\nvar color = __webpack_require__(1831);\nvar defaults = __webpack_require__(1547);\nvar helpers = __webpack_require__(1543);\nvar scaleService = __webpack_require__(1584);\n\nmodule.exports = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.host) {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n/***/ }),\n\n/***/ 2171:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar conversions = __webpack_require__(2172);\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n/***/ }),\n\n/***/ 2172:\n/***/ (function(module, exports) {\n\n/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n/***/ }),\n\n/***/ 2173:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* MIT license */\nvar colorNames = __webpack_require__(2174);\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n\n/***/ }),\n\n/***/ 2174:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n/***/ }),\n\n/***/ 2175:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar Element = __webpack_require__(1572);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n\n/***/ }),\n\n/***/ 2176:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar Element = __webpack_require__(1572);\nvar helpers = __webpack_require__(1543);\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n\n/***/ }),\n\n/***/ 2177:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar Element = __webpack_require__(1572);\nvar helpers = __webpack_require__(1543);\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || (model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\n\n/***/ }),\n\n/***/ 2178:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar Element = __webpack_require__(1572);\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n\n/***/ }),\n\n/***/ 2179:\n/***/ (function(module, exports) {\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n\n/***/ }),\n\n/***/ 2180:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n\n\nvar helpers = __webpack_require__(1543);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n\n/***/ }),\n\n/***/ 2181:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Animation = __webpack_require__(1832);\nvar animations = __webpack_require__(1833);\nvar defaults = __webpack_require__(1547);\nvar helpers = __webpack_require__(1543);\nvar Interaction = __webpack_require__(1834);\nvar layouts = __webpack_require__(1660);\nvar platform = __webpack_require__(1835);\nvar plugins = __webpack_require__(1836);\nvar scaleService = __webpack_require__(1584);\nvar Tooltip = __webpack_require__(1837);\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tanimations.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update({\n\t\t\t\t\tduration: me.options.responsiveAnimationDuration\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tscaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tanimations.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render({\n\t\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\t\tlazy: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n\n/***/ }),\n\n/***/ 2182:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1543);\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element) {\n\t\t\thelpers.merge(element._model, element.$previousStyle || {});\n\t\t\tdelete element.$previousStyle;\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n/***/ }),\n\n/***/ 2183:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1543);\nvar Scale = __webpack_require__(1661);\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar factor;\n\tvar precision;\n\tvar spacing;\n\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\n\t\tprecision = generationOptions.precision;\n\t\tif (precision !== undefined) {\n\t\t\t// If the user specified a precision, round to that number of decimal places\n\t\t\tfactor = Math.pow(10, precision);\n\t\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t\t}\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tprecision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tprecision: tickOpts.precision,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tScale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 2184:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Scale = __webpack_require__(1661);\nvar scaleService = __webpack_require__(1584);\n\nmodule.exports = function() {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};\n\n\n/***/ }),\n\n/***/ 2185:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar helpers = __webpack_require__(1543);\nvar scaleService = __webpack_require__(1584);\nvar Ticks = __webpack_require__(1662);\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};\n\n\n/***/ }),\n\n/***/ 2186:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar helpers = __webpack_require__(1543);\nvar Scale = __webpack_require__(1661);\nvar scaleService = __webpack_require__(1584);\nvar Ticks = __webpack_require__(1662);\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tScale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};\n\n\n/***/ }),\n\n/***/ 2187:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar helpers = __webpack_require__(1543);\nvar scaleService = __webpack_require__(1584);\nvar Ticks = __webpack_require__(1662);\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};\n\n\n/***/ }),\n\n/***/ 2188:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* global window: false */\n\n\nvar moment = __webpack_require__(29);\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = __webpack_require__(1547);\nvar helpers = __webpack_require__(1543);\nvar Scale = __webpack_require__(1661);\nvar scaleService = __webpack_require__(1584);\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function() {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tScale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n\n/***/ }),\n\n/***/ 2189:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar elements = __webpack_require__(1585);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 2190:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar elements = __webpack_require__(1585);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\trotation: options.rotation,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle',\n\t\t\t\t'rotation'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 2191:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar elements = __webpack_require__(1585);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\n\t\t\t// Resets the visual styles\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 2192:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar elements = __webpack_require__(1585);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tgetPointRotation: function(point, index) {\n\t\t\tvar pointRotation = this.chart.options.elements.point.rotation;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.rotation)) {\n\t\t\t\tpointRotation = custom.rotation;\n\t\t\t} else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n\t\t\t\tpointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n\t\t\t}\n\t\t\treturn pointRotation;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\trotation: me.getPointRotation(point, index),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar halfBorderWidth;\n\t\t\tvar i = 0;\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\t\thelpers.canvas.clipArea(chart.ctx, {\n\t\t\t\t\tleft: area.left,\n\t\t\t\t\tright: area.right,\n\t\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t\t});\n\n\t\t\t\tmeta.dataset.draw();\n\n\t\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t},\n\t});\n};\n\n\n/***/ }),\n\n/***/ 2193:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar elements = __webpack_require__(1585);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar start = me.chart.options.startAngle || 0;\n\t\t\tvar starts = me._starts = [];\n\t\t\tvar angles = me._angles = [];\n\t\t\tvar i, ilen, angle;\n\n\t\t\tme._updateRadius();\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\t\tstarts[i] = start;\n\t\t\t\tangle = me._computeAngle(i);\n\t\t\t\tangles[i] = angle;\n\t\t\t\tstart += angle;\n\t\t\t}\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_updateRadius: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = me._starts[index];\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = arc._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_computeAngle: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar count = this.getMeta().count;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\n\t\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: me.chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\treturn helpers.options.resolve([\n\t\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t\t(2 * Math.PI) / count\n\t\t\t], context, index);\n\t\t}\n\t});\n};\n\n\n/***/ }),\n\n/***/ 2194:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar elements = __webpack_require__(1585);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\t\t\t\t\trotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\t});\n};\n\n\n/***/ }),\n\n/***/ 2195:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n\n/***/ }),\n\n/***/ 2196:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 2197:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 2198:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 2199:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 2200:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 2201:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n/***/ }),\n\n/***/ 2202:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n\n/***/ }),\n\n/***/ 2203:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\nmodule.exports.filler = __webpack_require__(2204);\nmodule.exports.legend = __webpack_require__(2205);\nmodule.exports.title = __webpack_require__(2206);\n\n\n/***/ }),\n\n/***/ 2204:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n\n\nvar defaults = __webpack_require__(1547);\nvar elements = __webpack_require__(1585);\nvar helpers = __webpack_require__(1543);\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 2205:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar Element = __webpack_require__(1572);\nvar helpers = __webpack_require__(1543);\nvar layouts = __webpack_require__(1660);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 2206:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(1547);\nvar Element = __webpack_require__(1572);\nvar helpers = __webpack_require__(1543);\nvar layouts = __webpack_require__(1660);\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n\n/***/ }),\n\n/***/ 2207:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIsEqual = __webpack_require__(235);\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n\n\n/***/ }),\n\n/***/ 2208:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar createFind = __webpack_require__(2209),\n    findIndex = __webpack_require__(2210);\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n\n\n/***/ }),\n\n/***/ 2209:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseIteratee = __webpack_require__(451),\n    isArrayLike = __webpack_require__(90),\n    keys = __webpack_require__(142);\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n\n\n/***/ }),\n\n/***/ 2210:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseFindIndex = __webpack_require__(470),\n    baseIteratee = __webpack_require__(451),\n    toInteger = __webpack_require__(2211);\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n\n\n/***/ }),\n\n/***/ 2211:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toFinite = __webpack_require__(2212);\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n\n\n/***/ }),\n\n/***/ 2212:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar toNumber = __webpack_require__(463);\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n\n\n/***/ }),\n\n/***/ 2213:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseAssignValue = __webpack_require__(146),\n    createAggregator = __webpack_require__(2214);\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n\n\n/***/ }),\n\n/***/ 2214:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar arrayAggregator = __webpack_require__(2215),\n    baseAggregator = __webpack_require__(2216),\n    baseIteratee = __webpack_require__(451),\n    isArray = __webpack_require__(45);\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n\n\n/***/ }),\n\n/***/ 2215:\n/***/ (function(module, exports) {\n\n/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n\n\n/***/ }),\n\n/***/ 2216:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseEach = __webpack_require__(2217);\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n\n\n/***/ }),\n\n/***/ 2217:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseForOwn = __webpack_require__(2218),\n    createBaseEach = __webpack_require__(2219);\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n\n\n/***/ }),\n\n/***/ 2218:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar baseFor = __webpack_require__(466),\n    keys = __webpack_require__(142);\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n/***/ }),\n\n/***/ 2219:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isArrayLike = __webpack_require__(90);\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/52.d064b1ff.chunk.js","import React from 'react'\nimport Page from 'components/LayoutComponents/Page'\nimport Helmet from 'react-helmet'\nimport ChartItems from './Chart'\n\nclass ChartistPage extends React.Component {\n  static defaultProps = {\n    pathName: 'Chart.js',\n    roles: ['agent', 'administrator'],\n  }\n\n  render() {\n    const props = this.props\n    return (\n      <Page {...props}>\n        <Helmet title=\"Chart.js\" />\n        <ChartItems />\n      </Page>\n    )\n  }\n}\n\nexport default ChartistPage\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/Charts/ChartPage/index.js","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/helpers/index.js\n// module id = 1543\n// module chunks = 52","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.defaults.js\n// module id = 1547\n// module chunks = 52","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.element.js\n// module id = 1572\n// module chunks = 52","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tlayouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.scaleService.js\n// module id = 1584\n// module chunks = 52","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/elements/index.js\n// module id = 1585\n// module chunks = 52","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.layouts.js\n// module id = 1660\n// module chunks = 52","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers.isArray(tick) ?\n\t\thelpers.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n\tvar valueOrDefault = helpers.valueOrDefault;\n\tvar globalDefaults = defaults.global;\n\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\treturn {\n\t\tsize: size,\n\t\tstyle: style,\n\t\tfamily: family,\n\t\tfont: helpers.fontString(size, style, family)\n\t};\n}\n\nfunction parseLineHeight(options) {\n\treturn helpers.options.toLineHeight(\n\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\tme.afterBuildTicks();\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers.noop,\n\tafterDataLimits: function() {\n\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers.noop,\n\tafterBuildTicks: function() {\n\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tcontext.font = tickFont.font;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = opts.display;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing them\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t} else {\n\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar skipRatio;\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\tvar result = [];\n\t\tvar i, tick, shouldSkip;\n\n\t\t// figure out the maximum number of gridlines to show\n\t\tvar maxTicks;\n\t\tif (optionTicks.maxTicksLimit) {\n\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t}\n\n\t\tif (isHorizontal) {\n\t\t\tskipRatio = false;\n\n\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t}\n\n\t\t\t// if they defined a max number of optionTicks,\n\t\t\t// increase skipRatio until that number is met\n\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t// Actually draw the scale on the canvas\n\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tif (!options.display) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t} else {\n\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\tvar textAlign = 'middle';\n\t\t\tvar textBaseline = 'middle';\n\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t// bottom\n\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\t// top\n\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t}\n\n\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\tty1 = yTickStart;\n\t\t\t\tty2 = yTickEnd;\n\t\t\t\ty1 = chartArea.top;\n\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tvar labelXOffset;\n\n\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t} else {\n\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t}\n\n\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\ttx1 = xTickStart;\n\t\t\t\ttx2 = xTickEnd;\n\t\t\t\tx1 = chartArea.left;\n\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\tif (gridLines.display) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (gridLines.drawBorder) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tvar x1 = me.left;\n\t\t\tvar x2 = me.right + axisWidth;\n\t\t\tvar y1 = me.top;\n\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\tif (isHorizontal) {\n\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\ty1 += aliasPixel;\n\t\t\t\ty2 += aliasPixel;\n\t\t\t} else {\n\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\tx1 += aliasPixel;\n\t\t\t\tx2 += aliasPixel;\n\t\t\t}\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.scale.js\n// module id = 1661\n// module chunks = 52","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.ticks.js\n// module id = 1662\n// module chunks = 52","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/helpers/helpers.core.js\n// module id = 1668\n// module chunks = 52","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chartjs-color/index.js\n// module id = 1831\n// module chunks = 52","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.animation.js\n// module id = 1832\n// module chunks = 52","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = {\n\tframeDuration: 17,\n\tanimations: [],\n\tdropFrames: 0,\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {Number} duration - The animation duration in ms.\n\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\t\tvar startTime = Date.now();\n\t\tvar framesToDrop = 0;\n\n\t\tif (me.dropFrames > 1) {\n\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t}\n\n\t\tme.advance(1 + framesToDrop);\n\n\t\tvar endTime = Date.now();\n\n\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function(count) {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart;\n\t\tvar i = 0;\n\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\n\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.animations.js\n// module id = 1833\n// module chunks = 52","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.interaction.js\n// module id = 1834\n// module chunks = 52","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/platforms/platform.js\n// module id = 1835\n// module chunks = 52","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.plugins.js\n// module id = 1836\n// module chunks = 52","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {Point} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: Math.round(x / count),\n\t\t\ty: Math.round(y / count)\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t * @returns {Point} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n/**\n * Helper method to merge the opacity into a color\n */\nfunction mergeOpacity(colorString, opacity) {\n\tvar color = helpers.color(colorString);\n\treturn color.alpha(opacity * color.alpha()).rgbaString();\n}\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n// Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = defaults.global;\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers.each(body, function(bodyItem) {\n\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar body = vm.body;\n\n\t\tctx.textAlign = vm._bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t// Before Body\n\t\tvar xLinePadding = 0;\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t// Draw body lines now\n\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.x += vm.xPadding;\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {Boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nexports.positioners = positioners;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.tooltip.js\n// module id = 1837\n// module chunks = 52","import React from 'react'\nimport { Line, Bar, Radar, Polar, Pie, Doughnut } from 'react-chartjs-2'\n\nconst lineData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n}\n\nconst lineOptions = {\n  scales: {\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n  },\n}\n\nconst barData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)',\n      ],\n      borderColor: [\n        'rgba(255,99,132,1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)',\n      ],\n      borderWidth: 1,\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n}\n\nconst barOptions = {\n  scales: {\n    xAxes: [\n      {\n        stacked: true,\n      },\n    ],\n    yAxes: [\n      {\n        stacked: true,\n      },\n    ],\n  },\n}\n\nconst radarData = {\n  labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      backgroundColor: 'rgba(179,181,198,0.2)',\n      borderColor: 'rgba(179,181,198,1)',\n      pointBackgroundColor: 'rgba(179,181,198,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(179,181,198,1)',\n      data: [65, 59, 90, 81, 56, 55, 40],\n    },\n    {\n      label: 'My Second dataset',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      pointBackgroundColor: 'rgba(255,99,132,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(255,99,132,1)',\n      data: [28, 48, 40, 19, 96, 27, 100],\n    },\n  ],\n}\n\nconst radarOptions = {\n  scale: {\n    reverse: true,\n    ticks: {\n      beginAtZero: true,\n    },\n  },\n}\n\nconst polarData = {\n  datasets: [\n    {\n      data: [11, 16, 7, 3, 14],\n      backgroundColor: ['#FF6384', '#4BC0C0', '#FFCE56', '#E7E9ED', '#36A2EB'],\n      label: 'My dataset', // for legend\n    },\n  ],\n  labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue'],\n}\n\nconst polarOptions = {\n  elements: {\n    arc: {\n      borderColor: '#4BC0C0',\n    },\n  },\n}\n\nconst pieData = {\n  labels: ['Red', 'Blue', 'Yellow'],\n  datasets: [\n    {\n      data: [300, 50, 100],\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n    },\n  ],\n}\n\nconst pieOptions = {}\n\nconst doughnutData = {\n  labels: ['Red', 'Blue', 'Yellow'],\n  datasets: [\n    {\n      data: [300, 50, 100],\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n    },\n  ],\n}\n\nconst doughnutOptions = {}\n\nclass ChartItems extends React.Component {\n  render() {\n    return (\n      <section className=\"card\">\n        <div className=\"card-header\">\n          <div className=\"utils__title\">\n            <strong>Chart.js</strong>\n            <a\n              href=\"http://www.chartjs.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"btn btn-sm btn-primary ml-4\"\n            >\n              Official Documentation <i className=\"icmn-link ml-1\" />\n            </a>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <h5 className=\"text-black\">\n                <strong>Line Chart</strong>\n              </h5>\n              <p className=\"text-muted\">\n                Element: read{' '}\n                <a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  official documentation<small>\n                    <i className=\"icmn-link ml-1\" />\n                  </small>\n                </a>\n              </p>\n              <div className=\"mb-5\">\n                <Line data={lineData} options={lineOptions} width={400} height={200} />\n              </div>\n            </div>\n            <div className=\"col-lg-6\">\n              <h5 className=\"text-black\">\n                <strong>Bar Chart</strong>\n              </h5>\n              <p className=\"text-muted\">\n                Element: read{' '}\n                <a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  official documentation<small>\n                    <i className=\"icmn-link ml-1\" />\n                  </small>\n                </a>\n              </p>\n              <div className=\"mb-5\">\n                <Bar data={barData} options={barOptions} width={400} height={200} />\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <h5 className=\"text-black\">\n                <strong>Radar Chart</strong>\n              </h5>\n              <p className=\"text-muted\">\n                Element: read{' '}\n                <a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  official documentation<small>\n                    <i className=\"icmn-link ml-1\" />\n                  </small>\n                </a>\n              </p>\n              <div className=\"mb-5\">\n                <Radar data={radarData} options={radarOptions} width={400} height={200} />\n              </div>\n            </div>\n            <div className=\"col-lg-6\">\n              <h5 className=\"text-black\">\n                <strong>Polar Chart</strong>\n              </h5>\n              <p className=\"text-muted\">\n                Element: read{' '}\n                <a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  official documentation<small>\n                    <i className=\"icmn-link ml-1\" />\n                  </small>\n                </a>\n              </p>\n              <div className=\"mb-5\">\n                <Polar data={polarData} options={polarOptions} width={400} height={200} />\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <h5 className=\"text-black\">\n                <strong>Pie Chart</strong>\n              </h5>\n              <p className=\"text-muted\">\n                Element: read{' '}\n                <a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  official documentation<small>\n                    <i className=\"icmn-link ml-1\" />\n                  </small>\n                </a>\n              </p>\n              <div className=\"mb-5\">\n                <Pie data={pieData} options={pieOptions} width={400} height={200} />\n              </div>\n            </div>\n            <div className=\"col-lg-6\">\n              <h5 className=\"text-black\">\n                <strong>Doughnut Chart</strong>\n              </h5>\n              <p className=\"text-muted\">\n                Element: read{' '}\n                <a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  official documentation<small>\n                    <i className=\"icmn-link ml-1\" />\n                  </small>\n                </a>\n              </p>\n              <div className=\"mb-5\">\n                <Doughnut data={doughnutData} options={doughnutOptions} width={400} height={200} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default ChartItems\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/Charts/ChartPage/Chart/index.js","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\n\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n\n\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  };\n\n  // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n\n\n    var data = this.memoizeDataProps(this.props);\n\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    }\n\n    // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider);\n\n    // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']);\n        // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n\n\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\n\n\nexport default ChartComponent;\n\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\n\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\n\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\n\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\n\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\n\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\n\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\n\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\n\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\n\nexport var defaults = Chart.defaults;\nexport { Chart };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-chartjs-2/es/index.js\n// module id = 2164\n// module chunks = 52","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-in plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/chart.js\n// module id = 2165\n// module chunks = 52","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.js\n// module id = 2166\n// module chunks = 52","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/helpers/helpers.easing.js\n// module id = 2167\n// module chunks = 52","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\t// NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n\t\t\t// on Chrome when `r` is exactly half the height or the width.\n\t\t\tvar epsilon = 0.0000001;\n\t\t\tvar r = Math.min(radius, (height / 2) - epsilon, (width / 2) - epsilon);\n\n\t\t\tctx.moveTo(x + r, y);\n\t\t\tctx.lineTo(x + width - r, y);\n\t\t\tctx.arcTo(x + width, y, x + width, y + r, r);\n\t\t\tctx.lineTo(x + width, y + height - r);\n\t\t\tctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n\t\t\tctx.lineTo(x + r, y + height);\n\t\t\tctx.arcTo(x, y + height, x, y + height - r, r);\n\t\t\tctx.lineTo(x, y + r);\n\t\t\tctx.arcTo(x, y, x + r, y, r);\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\t\trotation = rotation || 0;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.translate(x, y);\n\t\tctx.rotate(rotation * Math.PI / 180);\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(-edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(0, -2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.rect(-size, -size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = -offset;\n\t\t\tvar topY = -offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\n\t\t\t// NOTE(SB) the rounded rect implementation changed to use `arcTo`\n\t\t\t// instead of `quadraticCurveTo` since it generates better results\n\t\t\t// when rect is almost a circle. 0.425 (instead of 0.5) produces\n\t\t\t// results visually closer to the previous impl.\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.moveTo(-size, 0);\n\t\t\tctx.lineTo(0, size);\n\t\t\tctx.lineTo(size, 0);\n\t\t\tctx.lineTo(0, -size);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.restore();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/helpers/helpers.canvas.js\n// module id = 2168\n// module chunks = 52","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/helpers/helpers.options.js\n// module id = 2169\n// module chunks = 52","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.host) {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.helpers.js\n// module id = 2170\n// module chunks = 52","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chartjs-color/node_modules/color-convert/index.js\n// module id = 2171\n// module chunks = 52","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chartjs-color/node_modules/color-convert/conversions.js\n// module id = 2172\n// module chunks = 52","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chartjs-color-string/color-string.js\n// module id = 2173\n// module chunks = 52","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/color-name/index.js\n// module id = 2174\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/elements/element.arc.js\n// module id = 2175\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/elements/element.line.js\n// module id = 2176\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || (model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/elements/element.point.js\n// module id = 2177\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/elements/element.rectangle.js\n// module id = 2178\n// module chunks = 52","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/platforms/platform.basic.js\n// module id = 2179\n// module chunks = 52","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/platforms/platform.dom.js\n// module id = 2180\n// module chunks = 52","'use strict';\n\nvar Animation = require('./core.animation');\nvar animations = require('./core.animations');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\nvar scaleService = require('../core/core.scaleService');\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tanimations.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update({\n\t\t\t\t\tduration: me.options.responsiveAnimationDuration\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tscaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tanimations.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render({\n\t\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\t\tlazy: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.controller.js\n// module id = 2181\n// module chunks = 52","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element) {\n\t\t\thelpers.merge(element._model, element.$previousStyle || {});\n\t\t\tdelete element.$previousStyle;\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/core/core.datasetController.js\n// module id = 2182\n// module chunks = 52","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar factor;\n\tvar precision;\n\tvar spacing;\n\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\n\t\tprecision = generationOptions.precision;\n\t\tif (precision !== undefined) {\n\t\t\t// If the user specified a precision, round to that number of decimal places\n\t\t\tfactor = Math.pow(10, precision);\n\t\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t\t}\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tprecision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tprecision: tickOpts.precision,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tScale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/scales/scale.linearbase.js\n// module id = 2183\n// module chunks = 52","'use strict';\n\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/scales/scale.category.js\n// module id = 2184\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/scales/scale.linear.js\n// module id = 2185\n// module chunks = 52","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tScale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/scales/scale.logarithmic.js\n// module id = 2186\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/scales/scale.radialLinear.js\n// module id = 2187\n// module chunks = 52","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function() {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tScale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/scales/scale.time.js\n// module id = 2188\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/controllers/controller.bar.js\n// module id = 2189\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\trotation: options.rotation,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle',\n\t\t\t\t'rotation'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\t\t\treturn values;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/controllers/controller.bubble.js\n// module id = 2190\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\n\t\t\t// Resets the visual styles\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/controllers/controller.doughnut.js\n// module id = 2191\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tgetPointRotation: function(point, index) {\n\t\t\tvar pointRotation = this.chart.options.elements.point.rotation;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.rotation)) {\n\t\t\t\tpointRotation = custom.rotation;\n\t\t\t} else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n\t\t\t\tpointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n\t\t\t}\n\t\t\treturn pointRotation;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\trotation: me.getPointRotation(point, index),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar halfBorderWidth;\n\t\t\tvar i = 0;\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\t\thelpers.canvas.clipArea(chart.ctx, {\n\t\t\t\t\tleft: area.left,\n\t\t\t\t\tright: area.right,\n\t\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t\t});\n\n\t\t\t\tmeta.dataset.draw();\n\n\t\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t},\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/controllers/controller.line.js\n// module id = 2192\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar start = me.chart.options.startAngle || 0;\n\t\t\tvar starts = me._starts = [];\n\t\t\tvar angles = me._angles = [];\n\t\t\tvar i, ilen, angle;\n\n\t\t\tme._updateRadius();\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\t\tstarts[i] = start;\n\t\t\t\tangle = me._computeAngle(i);\n\t\t\t\tangles[i] = angle;\n\t\t\t\tstart += angle;\n\t\t\t}\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_updateRadius: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = me._starts[index];\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = arc._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_computeAngle: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar count = this.getMeta().count;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\n\t\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: me.chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\treturn helpers.options.resolve([\n\t\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t\t(2 * Math.PI) / count\n\t\t\t], context, index);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/controllers/controller.polarArea.js\n// module id = 2193\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\t\t\t\t\trotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/controllers/controller.radar.js\n// module id = 2194\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/controllers/controller.scatter.js\n// module id = 2195\n// module chunks = 52","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/charts/Chart.Bar.js\n// module id = 2196\n// module chunks = 52","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/charts/Chart.Bubble.js\n// module id = 2197\n// module chunks = 52","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/charts/Chart.Doughnut.js\n// module id = 2198\n// module chunks = 52","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/charts/Chart.Line.js\n// module id = 2199\n// module chunks = 52","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/charts/Chart.PolarArea.js\n// module id = 2200\n// module chunks = 52","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/charts/Chart.Radar.js\n// module id = 2201\n// module chunks = 52","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/charts/Chart.Scatter.js\n// module id = 2202\n// module chunks = 52","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/plugins/index.js\n// module id = 2203\n// module chunks = 52","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/plugins/plugin.filler.js\n// module id = 2204\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/plugins/plugin.legend.js\n// module id = 2205\n// module chunks = 52","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chart.js/src/plugins/plugin.title.js\n// module id = 2206\n// module chunks = 52","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/isEqual.js\n// module id = 2207\n// module chunks = 52","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/find.js\n// module id = 2208\n// module chunks = 52","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_createFind.js\n// module id = 2209\n// module chunks = 52","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/findIndex.js\n// module id = 2210\n// module chunks = 52","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/toInteger.js\n// module id = 2211\n// module chunks = 52","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/toFinite.js\n// module id = 2212\n// module chunks = 52","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/keyBy.js\n// module id = 2213\n// module chunks = 52","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_createAggregator.js\n// module id = 2214\n// module chunks = 52","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_arrayAggregator.js\n// module id = 2215\n// module chunks = 52","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseAggregator.js\n// module id = 2216\n// module chunks = 52","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseEach.js\n// module id = 2217\n// module chunks = 52","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_baseForOwn.js\n// module id = 2218\n// module chunks = 52","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/_createBaseEach.js\n// module id = 2219\n// module chunks = 52"],"sourceRoot":""}